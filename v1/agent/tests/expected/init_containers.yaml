apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-with-init
spec:
  replicas: 3
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
    spec:
      initContainers:
      # Wait for database to be ready
      - name: wait-for-db
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z db-service 5432; do echo waiting for db; sleep 2; done']
        resources:
          requests:
            cpu: "50m"
            memory: "64Mi"
          limits:
            cpu: "100m"
            memory: "128Mi"
      # Run database migrations
      - name: db-migration
        image: myapp/migration:latest
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: url
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
      # Download and prepare static assets
      - name: prepare-assets
        image: myapp/assets:latest
        command: ['sh', '-c', 'cp -r /assets/* /app-assets/']
        volumeMounts:
        - name: assets
          mountPath: /app-assets
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
      containers:
      - name: app
        image: myapp/app:v1.0.0
        ports:
        - containerPort: 8080
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: url
        volumeMounts:
        - name: assets
          mountPath: /app/static
          readOnly: true
        resources:
          requests:
            cpu: "250m"
            memory: "512Mi"
          limits:
            cpu: "1000m"
            memory: "1Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
        startupProbe:
          httpGet:
            path: /startup
            port: 8080
          failureThreshold: 30
          periodSeconds: 10
      volumes:
      - name: assets
        emptyDir: {}